{"ast":null,"code":"import _classCallCheck from \"/home/daysleeper/projects/react/tv-series-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daysleeper/projects/react/tv-series-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/daysleeper/projects/react/tv-series-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/daysleeper/projects/react/tv-series-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/daysleeper/projects/react/tv-series-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/daysleeper/projects/react/tv-series-app/src/components/Search/SearchBar.js\";\nimport React, { Component } from 'react';\nimport SearchList from './SearchList';\n\nvar axios = require('axios');\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBar, _Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      results: [],\n      searchInput: '',\n      isFetching: false\n    };\n\n    _this.searchInputChange = function (e) {\n      _this.setState({\n        searchInput: e.target.value,\n        isFetching: true\n      });\n\n      var API_KEY = 'e7a42390';\n      var URL = \"http://www.omdbapi.com/?apikey=\".concat(API_KEY, \"&s=\").concat(e.target.value);\n      axios.get(URL).then(function (res) {\n        if (res.data.Response === \"True\") {\n          // console.log(res.data);\n          _this.setState({\n            results: res.data.Search,\n            isFetching: false\n          });\n        } else {\n          _this.setState({\n            results: [],\n            isFetching: false\n          });\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          results = _this$state.results,\n          searchInput = _this$state.searchInput,\n          isFetching = _this$state.isFetching;\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col l2 hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-field col l8 m12 s12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"search\",\n        placeholder: \"Please enter title name... \",\n        value: searchInput,\n        onChange: this.searchInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Search\"), isFetching && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"LOADING...\")), React.createElement(\"div\", {\n        className: \"col l2 hide-on-med-and-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), !isFetching && searchInput.trim() !== '' && React.createElement(SearchList, {\n        results: results,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/daysleeper/projects/react/tv-series-app/src/components/Search/SearchBar.js"],"names":["React","Component","SearchList","axios","require","SearchBar","state","results","searchInput","isFetching","searchInputChange","e","setState","target","value","API_KEY","URL","get","then","res","data","Response","Search","catch","err","console","log","trim"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,UAAU,EAAE;AAHR,K;;UAMRC,iB,GAAoB,UAAAC,CAAC,EAAI;AACrB,YAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAEG,CAAC,CAACE,MAAF,CAASC,KADZ;AAEVL,QAAAA,UAAU,EAAE;AAFF,OAAd;;AAIA,UAAMM,OAAO,GAAG,UAAhB;AACA,UAAMC,GAAG,4CAAqCD,OAArC,gBAAkDJ,CAAC,CAACE,MAAF,CAASC,KAA3D,CAAT;AACAX,MAAAA,KAAK,CAACc,GAAN,CAAUD,GAAV,EACKE,IADL,CACU,UAAAC,GAAG,EAAI;AACT,YAAIA,GAAG,CAACC,IAAJ,CAASC,QAAT,KAAsB,MAA1B,EAAkC;AAC9B;AACA,gBAAKT,QAAL,CAAc;AACVL,YAAAA,OAAO,EAAEY,GAAG,CAACC,IAAJ,CAASE,MADR;AAEVb,YAAAA,UAAU,EAAE;AAFF,WAAd;AAIH,SAND,MAMO;AACH,gBAAKG,QAAL,CAAc;AACVL,YAAAA,OAAO,EAAE,EADC;AAEVE,YAAAA,UAAU,EAAE;AAFF,WAAd;AAIH;AACJ,OAdL,EAeCc,KAfD,CAeO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAfV;AAiBH,K;;;;;;;6BACQ;AAAA,wBACsC,KAAKlB,KAD3C;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UACWC,WADX,eACWA,WADX;AAAA,UACwBC,UADxB,eACwBA,UADxB;AAEL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,WAAW,EAAC,6BAA3C;AAAyE,QAAA,KAAK,EAAED,WAAhF;AAA6F,QAAA,QAAQ,EAAE,KAAKE,iBAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAIQD,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJtB,CAFJ,EAUA;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,EAYY,CAACA,UAAD,IAAeD,WAAW,CAACmB,IAAZ,OAAuB,EAAtC,IAA4C,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEpB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZxD,CADJ;AAiBH;;;;EApDmBN,S;;AAwDxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport SearchList from './SearchList';\nconst axios = require('axios');\n\nclass SearchBar extends Component {\n\n    state = {\n        results:[],\n        searchInput: '',\n        isFetching: false\n    }\n\n    searchInputChange = e => {\n        this.setState({\n            searchInput: e.target.value,\n            isFetching: true\n        })\n        const API_KEY = 'e7a42390';\n        const URL = `http://www.omdbapi.com/?apikey=${API_KEY}&s=${e.target.value}`;\n        axios.get(URL)\n            .then(res => {\n                if (res.data.Response === \"True\") {\n                    // console.log(res.data);\n                    this.setState({\n                        results: res.data.Search,\n                        isFetching: false\n                    })\n                } else {\n                    this.setState({\n                        results: [],\n                        isFetching: false\n                    })\n                }\n            })\n        .catch(err => console.log(err))\n\n    }\n    render() {\n        const {results, searchInput, isFetching} = this.state;\n        return (\n            <div className=\"row\">\n                <div className=\"col l2 hide-on-med-and-down\"></div>\n                <div className=\"input-field col l8 m12 s12\">\n                    <input type=\"text\" id=\"search\" placeholder=\"Please enter title name... \" value={searchInput} onChange={this.searchInputChange}/>\n                    <label for=\"search\">Search</label>\n                    {\n                        isFetching && <p>LOADING...</p>\n                    }\n\n                </div>\n            <div className=\"col l2 hide-on-med-and-down\"></div>\n            {\n                        !isFetching && searchInput.trim() !== '' && <SearchList results={results} />\n                    }\n            </div>\n        )\n    }\n}\n\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}